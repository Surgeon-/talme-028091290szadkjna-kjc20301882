<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ctrl_scenery</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ambient setup

//The red, green and blue components of the ambient colour.
amb_red   = 255;
amb_green = 255;
amb_blue  = 255;

//Ambient alpha (darkness). 0 to 1, with 0 meaning everything is lit
//and 1 being pitch-black darkness.
amb_alpha = 0.0;

//Ambient bloom (additional brightness of light areas). 0 to 1, with
//0 being no bloom and 1 being maximum bloom.
amb_bloom = 0;
  
//Don't change the code below!
var col = make_colour_rgb(amb_red, amb_green, amb_blue);
HG_world_lighting_set_ambient(-1, amb_alpha, col);

res_instance_init();

//*** BACKGROUND SETUP: ***

//Example:
//amb_backgrounds[n,0] = background_name;
//amb_backgrounds[n,1] = parallax_speed;

amb_backgrounds = 0;

_altHeight = 0;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dummy
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Secondary initialization

var svld_str = global.svld_string;

if (!game_is_initialized() || svld_str != "") {

  if (svld_str != "") {
    
    //show_message("Secondary initialization (aux): svld_string = " + global.svld_string);
    //show_message("game_init_flag = " + string(global.game_init_flag));
    
    //Basic initialization:
    instance_create(0,0,obj_initializer);
    
    //Mercury &amp; Pathfinding:
    if instance_exists(obj_hg_controller)
      remove(obj_hg_controller);
     
    instance_create(0,0,obj_hg_controller);
    
    if instance_exists(obj_pfd_controller)
      remove(obj_pfd_controller);
     
    instance_create(0,0,obj_pfd_controller);
    
    // Systems: 
    game_load_systems("rb_checkpoint_systems.ini");
    
    // Other:
    gui_show_message("Game loaded.",c_black,true);
    
    }
 
  }
 
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recovery

if (res_instance_get_flag() == RES_FLAG.do_recover) {

  var col = make_colour_rgb(amb_red, amb_green, amb_blue);
  HG_world_lighting_set_ambient(-1, amb_alpha, col);

  res_instance_init();

  res_instance_set_flag(RES_FLAG.do_not_recover);

  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dummy
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw parallax background:
var i;

if (!is_array(amb_backgrounds)) exit;

for (i=0; i&lt;array_length_2d(amb_backgrounds,0); i+=1) begin

 draw_background_parallax(amb_backgrounds[i,0],amb_backgrounds[i,1],true,false,_altHeight,1,1);
 
 }
 
 /*
 draw_background_parallax(bg_2,0.75,true,false,_altHeight,1,1);
 draw_background_parallax(bg_1,0.5,true,false,_altHeight,1,1);
 */
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
