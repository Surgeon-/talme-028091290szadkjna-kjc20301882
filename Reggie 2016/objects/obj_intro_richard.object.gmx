<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_richard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ai_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialization

ai_land_initialize_default();
_maxHealth = 500; 
_health    = _maxHealth;

res_instance_register();

_group = GROUP.friendly;

def_maxspeed     = 4;
def_acceleration = 0.5;
def_jumpPower    = 12;

// Attack setup
my_inv = rinv_create();

pspec_rinv_add_weapon(my_inv, "Assault Rifle", 1.0, 0, 1.0);
pspec_rinv_add_weapon(my_inv, "Revolver", 1.0, 0, 1.0);

rinv_add_simple(my_inv, "Bullet",      100);
rinv_add_simple(my_inv, "9mm Bullets", 100);

_weaponInstanceId = noone;

// Attack pause
att_pause_chance = 10;
att_pause_time   = 30;
att_pause_cnt    =  0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free memory

ai_land_cleanup_default();

if (instance_exists(_weaponInstanceId)) {
    remove(_weaponInstanceId);
    _weaponInstanceId = noone;
    }
    
rinv_destroy(my_inv);

res_instance_unreg();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>game_paused()</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update / Move

ai_land_update_default();
ai_land_execute_movement();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Attack

// Check if weapon is equipped, and if it is, can it be used:
var __no_weapon = (!instance_exists(_weaponInstanceId) ||
                   _weaponInstanceId.b_state == WPN_STATE.Disabled);

// Try to equip a new weapon:
if (__no_weapon) {

    if (instance_exists(_weaponInstanceId)) {
        remove(_weaponInstanceId);
        _weaponInstanceId = noone;
        }
        
    var __local_id = pspec_rinv_find_usable_weapon(my_inv);
        
    if (__local_id != -1) {
        _weaponInstanceId = wpn_instance_create(x, y, my_inv, __local_id);
        __no_weapon = false;
        }
    else {
        // ???
        }

    }
    
if (att_pause_cnt &gt; 0) att_pause_cnt -= 1;
    
if (!__no_weapon) {
      
    var tar_x, tar_y, fire;
             
    if (_aiState == AI_STATE.hunt &amp;&amp; _target != -1 &amp;&amp; instance_exists(_target)) {
        tar_x = _target.x;
        tar_y = _target.y;
        fire = (att_pause_cnt == 0);
        }
    else {
        tar_x = x + 32 * image_xscale;
        tar_y = y + 32;
        fire = false;
        }
    
    with (_weaponInstanceId) {
    
        wpn_local_set_position(other.x, other.y - 20, tar_x, tar_y);
        wpn_local_execute(other._group, fire, 1.0, 1.0);
        wpn_local_update_patron();
    
        }
        
    if (random(100) &lt; att_pause_chance) att_pause_cnt = att_pause_time;
    
    }
    
if (false) begin

    // Primary attack state ///////////////////////////////////////////////////////
    var att_p_can_shoot = true;
    
    if (att_p_pause_cnt &gt; 0) { // In pause
           
        att_p_pause_cnt -= 1;  
        att_p_can_shoot = false;
        
        }
    else if (att_p_rld_cnt &gt;= 0) { // Reloading
            
        att_p_rld_cnt -= 1;
        
        if (att_p_rld_cnt == 0 &amp;&amp; att_p_clips &gt; 0) {
            att_p_ammo_cnt = att_p_clip_size;
            att_p_clips -= 1;
            }
            
        att_p_can_shoot = false;
    
        }
    else if (att_p_cd_cnt &gt; 0) { // Cooldown
            
        att_p_cd_cnt -= 1;
        att_p_can_shoot = false;
    
        }
    // Secondary attack state /////////////////////////////////////////////////////
    { /*STUB*/ }
    
    if (_aiState == AI_STATE.hunt &amp;&amp; _target != -1 &amp;&amp; instance_exists(_target)) {
    
        // Primary attack /////////////////////////////////////////////////////////
        if (att_p_clips &gt; 0 || att_p_ammo_cnt &gt; 0) {
    
            if (att_p_can_shoot)  { // Shoot
            
                var dir = point_direction(x, y, _target.x, _target.y);
            
                create_projectile_bullet(x, y, object_index, _group, placeholderSpr, 
                                         dir, 20, 5, -1, -1, 0, 0, 0, 0, 0);
                                         
                if (irandom_range(0, 100) / 100 &lt;= att_p_pause_chance) {
                
                    att_p_pause_cnt = att_p_pause_time;
                
                    }
                else {
                
                    att_p_cd_cnt = att_p_cooldown;
                
                    }
            
                }
            
            }
        // Secondary attack ///////////////////////////////////////////////////////
        else {
        
            // STUB
        
            }
    
        }
    
end;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set image

if (_hspeed != 0) {

  if (!_grounded)
    image_xscale = sign(_hspeed);
  else
    image_xscale = -1 + ((_tarX &gt; x) * 2);
   
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_ai_parent">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self

//draw_sprite_ext(mask_index,0,x,y,1,1,0,c_white,0.25);

/*draw_sprite_ext(sprite_index, -1, round(x), round(y),
                2 * image_xscale, 2 * tern(_moveHeight,1,0.5,1),
                1, c_white, 1);*/
                
draw_self();

if (_grounded) {

  if _hspeed&lt;&gt;0
    image_index+=0.34;
    else
      image_index=0;

  }
  else
    image_index=0;
    
if (_weaponInstanceId != noone) {

    wpn_draw(_weaponInstanceId);

    }

//draw_set_colour(c_aqua);
//draw_set_halign(fa_center);
//draw_circle(x, y - _eyesY, 3, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
