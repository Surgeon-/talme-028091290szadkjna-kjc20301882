<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ctrl_fsm</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
SELECTOR = 0;

step_counter = 0;

reggie = (global.player_obj_id);
richrd = (obj_intro_richard.id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>game_paused()</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
step_counter += 1;

while (true) {

  switch (SELECTOR) {
  
    // Await(--end of title fade--)
    case 0: if (!(instance_exists(obj_title_fade) == false)) {
      SELECTOR = 0;
      exit;
      }
      
    // Show 1st dialogue
    txt_begin();

    var s = "";
    s += "Richard shouldn't be far now, I should look for him...\n";
    s += "[col:teal:[Use the "
    s += key_to_string(userControls[KEYBOARD.jump])  + ", ";
    s += key_to_string(userControls[KEYBOARD.crawl]) + ", ";
    s += key_to_string(userControls[KEYBOARD.left])  + " and ";
    s += key_to_string(userControls[KEYBOARD.right]) + " keys to move.\]]\n";
    s += "[col:teal:[To navigate through dialogues and monologues such as ";
    s += "this, use the number keys or the mouse.\]]";
    
    txt_add(s, "", "", "[End\]");
    
    txt_interface_open(reggie.x, reggie.y);
    txt_obj_name_1("Reggie");
    txt_obj_sprite_1(spr_portrait_reggie);
    txt_obj_name_2("");
    
    // Await(objdist(reggie, richrd) &lt; 45)
    case 1: if (!(objdist(reggie, richrd) &lt; 80)) {
      SELECTOR = 1;
      exit;
      }
      
    // Show 2nd dialogue
    txt_begin();
    txt_load_from_file("Dialogues/Intro/DIA_intro_01.das");
    txt_interface_open(reggie.x, reggie.y);
    
    // Await(--end of dialogue--)
    case 2: if (!(txt_obj_exists() == false)) {
      SELECTOR = 2;
      exit;
      }
      
    // Richard starts following Reggie
    with (richrd) {
      ai_guard_body(other.reggie, 50);
      }
      
    // Await(Reggie.x &gt;= 2000)
    case 3: if (!(reggie.x &gt;= 2000)) {
      SELECTOR = 3;
      exit;
      }
      
    var inv  = pspec_rinv_player_inv();
    var cond = (!rinv_item_is_null(inv, 0) ||
                !rinv_item_is_null(inv, 1) ||
                !rinv_item_is_null(inv, 2) ||
                !rinv_item_is_null(inv, 3) ||
                !rinv_item_is_null(inv, 4) );
                
    if (!cond) {
    
      // Show 3rd textbox
      txt_begin();
  
      var s = "";
      s += "Reggie, you really should equip a weapon, just in case.\n";
      s += "[col:teal:[To open the Inventory screen, press the "
      s += key_to_string(userControls[KEYBOARD.openInv]) + " key, or move the mouse cursor ";
      s += "near the top-left corner of the window, which will then reveal a menu with "
      s += "several buttons, one of which opens the Inventory screen.\]]";
      
      txt_add(s, "", "", "[End Dialogue\]");
      
      txt_interface_open(reggie.x, reggie.y);
      txt_obj_name_1("Reggie");
      txt_obj_sprite_1(spr_portrait_reggie);
      txt_obj_name_2("Richard");
          
      }  
      
    // Await(Reggie.x &gt;= 2400)
    case 4: if (!(reggie.x &gt;= 2400)) {
      SELECTOR = 4;
      exit;
      }
      
    var lvm = lvm_id();
    
    txt_begin();
    txt_load_from_file("Dialogues/Intro/DIA_intro_02.das");
    txt_interface_open_follow_instance(lvm[?"guard1"]);
      
    // Await(Reggie.x &gt;= 4272 and !player_is_in_combat())
    case 5: if (!(reggie.x &gt;= 4272 and !player_is_in_combat())) {
      SELECTOR = 5;
      exit;
      }
      
    var lvm = lvm_id();
      
    // Show textbox
    instance_activate_object(lvm[?"guard1"]);
    instance_activate_object(lvm[?"guard2"]);
    txt_begin();
    txt_load_from_file("Dialogues/Intro/DIA_intro_02_1.das");
    txt_interface_open(reggie.x, reggie.y);
    
    // Richard stops following
    with (richrd) {
      ai_guard_place(other.reggie.x, other.reggie.y, 50);
      }
    
    // Await(Reggie.x &gt;= 5450 &amp;&amp; !txt_obj_exists())
    case 6: if (!(reggie.x &gt;= 5450 &amp;&amp; !txt_obj_exists())) {
      SELECTOR = 6;
      exit;
      }
      
    txt_begin();
    txt_load_from_file("Dialogues/Intro/DIA_intro_03.das");
    txt_interface_open(reggie.x, reggie.y);
    
    // Await(Reggie.x &gt;= 7000)
    case 7: if (!(reggie.x &gt;= 7000)) {
      SELECTOR = 7;
      exit;
      }
      
    txt_begin();
    txt_load_from_file("Dialogues/Intro/DIA_intro_04.das");
    txt_interface_open(reggie.x, reggie.y);
    
    // Await(Reggie.x &lt; 6240 &amp;&amp; y &gt;= 880)
    case 8: if (!(reggie.x &lt; 6240 &amp;&amp; reggie.y &gt;= 880)) {
      SELECTOR = 8;
      exit;
      }
      
    // Collapse bridge
    HG_world_clear_region( -1
                         , lvm_get("bridge_grid_x") - floor(lvm_get("bridge_grid_w") / 2)
                         , lvm_get("bridge_grid_y") - floor(lvm_get("bridge_grid_h") / 2)
                         , lvm_get("bridge_grid_x") + floor(lvm_get("bridge_grid_w") / 2) + 1
                         , lvm_get("bridge_grid_y") + floor(lvm_get("bridge_grid_h") / 2) + 1
                         , terrainType[TERRAIN.Empty]
                         , false
                         ) ;
    
    // STUB - create some effects
    
    // Await(Reggie.y &gt;= 940)
    case 9: if (!(reggie.y &gt;= 940)) {
      SELECTOR = 9;
      exit;
      }
    
    game_start_scene(false);
    screen_fade(c_black, 25, 99);
    execute_string_delayed("game_change_room()", 30, true);
    
    default:
      instance_destroy();

    }
  break;
  
  }
  
  
  
  
  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
