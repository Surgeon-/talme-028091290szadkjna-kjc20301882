<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>placeholderSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>pickupParObj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_hspeed = 0;
_vspeed = 0;

ev_pickup_init = 0;

ttbw = 60 * 7; // Time to be awake

colrec_shrink = false;

_dormant = false;

image_xscale = 1;
image_yscale = 1;

// Shader stuff:
uAmount = shader_get_uniform(sh_bright, "amount");

amount_cnt = 0;
max_cnt = 120;
amount_curr = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>game_paused()</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Point n' Click
  
if (keyboard_check_pressed(vk_alt)) amount_cnt = 0;

if (pnc_is_target(id) || keyboard_check(vk_alt)) {

  amount_curr = abs(3 * dsin(360 * amount_cnt / max_cnt));

  }
else
  amount_curr = 0;

if (pnc_is_target(id) &amp;&amp; pnc_kbchk(KEYBOARD.pickUp)) {
  
  if (_mode == 0) {
  
    rinv_add_simple(-1, _itemName, _amount);
  
    }
  else {
                     
    rinv_add_complex_arr(-1, _itemName, _customValue);
  
    }

  instance_destroy();

  }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>game_paused()</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

if (colrec_shrink == true) {

  colrec_w = max(4, colrec_w - 0.025);
    
  colrec_shrink = false;

  }

if (!_dormant) {

  var moved_x = false, moved_y = false;

  //_width  = sprite_get_width(sprite_index) * image_xscale;
  //_height = sprite_get_height(sprite_index) * image_yscale;
  
  var grav = 0.2;
  
  _hspeed = clamp(_hspeed, -_width, _width);
  _vspeed = clamp(_vspeed + grav, -_height, _height);
  
  // Y movement:
  if (!place_meeting_solid(x, y + _vspeed)) {
  
    y += _vspeed;
    moved_y = true;
  
    }
  else {
  
    for (var i = floor(abs(_vspeed)); i &gt;= 0; i -= 1) {
    
      if (!place_meeting_solid(x, y + i * sign(_vspeed))) {
      
        y += i * sign(_vspeed);
        moved_y = true;
        break;
      
        }
    
      }
      
    _vspeed = 0;
  
    }
    
  // X movement:
  if (!place_meeting_solid(x + _hspeed, y)) {
  
    x += _hspeed;
    moved_x = true;
  
    }
  else {
  
    for (var i = floor(abs(_hspeed)); i &gt;= 0; i -= 1) {
    
      if (!place_meeting_solid(x + i * sign(_hspeed), y)) {
      
        x += i * sign(_hspeed);
        moved_x = true;
        break;
      
        }
    
      }
      
    _hspeed = 0;  
  
    }
    
  _hspeed *= 0.95;
  
  if (_hspeed &lt;= 0.2) _hspeed = 0;
  
  // Set _dormant:
  //_dormant = !(moved_x || moved_y);
  _dormant = (_hspeed == 0 &amp;&amp; _vspeed == 0);
  
  ttbw = max(0, ttbw - 1);
  
  if (ttbw == 0) _dormant = true;;
  
  }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Point n' Click
var key = userControls[KEYBOARD.pickUp];

if (pnc_cursor_in_mask(0, 0)) {

  var str = _itemName + " (" + string(_amount) + ")";
  
  str += "#&lt;" + key_to_string(key) + ": Pick up&gt;";

  pnc_set_tooltip(id, str);

  }
  
amount_cnt = (amount_cnt + 1) mod max_cnt;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="pickupParObj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!game_paused()) {

  if (ttbw == 0) exit;

  if (rectangle_in_rectangle(x - colrec_w / 2,
                             y - _height / 2,
                             x + colrec_w / 2,
                             y + _height / 2,
                             other.x - other.colrec_w / 2,
                             other.y - other._height / 2,
                             other.x + other.colrec_w / 2,
                             other.y + other._height / 2) == 0) exit;
  
  var push_factor = 1;

  var s = sign(x - other.x);
  
  if (s != 0) {
  
    _hspeed += push_factor * s;
  
    }
  else {
  
    _hspeed += push_factor * choose(1, -1);
  
    }
    
  _dormant = false;
  
  colrec_shrink = true;

  }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialization

// NOTE: Use init_inv_id, init_local_id, init_static_id, init_amount

pspec_pickup_init_arr( rinv_item_get_static_value(init_static_id, RINV_STATIC.name)
                     , init_amount
                     , rinv_item_get_dynamic_arr(init_inv_id, init_local_id)
                     ) ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_set(sh_bright);

  shader_set_uniform_f(uAmount, amount_curr);
  
  if (!_dormant)
    image_blend = c_red;
  else
    image_blend = c_white;
  
  draw_self();
  //draw_sprite(sprite_index, -1, x, y);
  
  /*draw_set_font(f_arial_12);
  draw_set_valign(fa_middle);
  draw_set_colour(c_white);
  draw_text(x, y, string(ttbw));*/

  /*draw_set_color(c_green);
  draw_rectangle(x - _width  / 2,
                 y - _height / 2,
                 x + _width  / 2,
                 y + _height / 2,
                 true);
  
  draw_set_color(c_fuchsia);
  draw_rectangle(x - colrec_w / 2,
                 y - _height  / 2,
                 x + colrec_w / 2,
                 y + _height  / 2,
                 true);*/
                 
  
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
