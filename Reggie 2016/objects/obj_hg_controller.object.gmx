<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ctrl_hg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-125</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var w, cs=32;

w = HG_world_create(ceil(room_width/cs), ceil(room_height/cs),
                    cs, 0, GLOBAL.view_width, GLOBAL.view_height,
                    "Empty", false);

HG_world_make_default(w);

HG_world_draw_enable_tiles(-1,0);

var c=make_colour_rgb(100,100,255);

HG_world_enable_lighting(-1,0.25,c,1,0,1,true,3,0.15,0.85,0);

//HG_world_enable_lighting(-1,0.25,c,1,0,0,true,1,0.0,1,0);

HG_world_lighting_enable_chunks(-1, 4, 4);

HG_world_enable_autotiling(-1);
  
uPixelW = shader_get_uniform(sh_equality_ol, "pixelW");
uPixelH = shader_get_uniform(sh_equality_ol, "pixelH");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Bloom radius

if (sett_get_value("Dynamic Bloom")="On") {

 obj_game_controller.bloomRadius=0.1+clamp(20/HG_nearest_light_dist((global.player_obj_id).x,
                                                                    (global.player_obj_id).y),0,0.3);
 
 }
 else obj_game_controller.bloomRadius=0.1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Render &amp; Draw Lighting
var auxSurf  = global.auxilary_surface;
var compSurf = global.composit_surface;

if (!surface_exists(auxSurf) or !surface_exists(compSurf) or
    !surface_exists(application_surface)) exit;
 
var texelW = texture_get_texel_width( surface_get_texture(application_surface));
var texelH = texture_get_texel_height(surface_get_texture(application_surface));

// Create lighting mask:
surface_set_target(auxSurf);

var sampler_ind = shader_get_sampler_index(sh_equality, "baseSampler");
var text = surface_get_texture(compSurf);

shader_set(sh_equality_ol);

  shader_set_uniform_f(uPixelW, texelW);
  shader_set_uniform_f(uPixelH, texelH);

  // Pass compSurf sampler to the shader:
  texture_set_stage(sampler_ind, text);
  
  // Draw the other surface:
  draw_surface(application_surface, 0, 0);

shader_reset();

surface_reset_target();

surface_copy(compSurf, 0, 0, auxSurf);
  
HG_world_render_lighting(-1, view_xview, view_yview);

HG_world_draw_lighting_mask(-1, view_xview, view_yview, compSurf);



















</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the World

HG_world_draw(-1, view_xview, view_yview, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is empty but needed.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
