<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
counter = 0;

step_title_begin = 60;
step_title_end   = 120;
step_subtitle_begin = 180;
step_subtitle_end   = 240;
step_end_begin = 300;
step_max = 420;

game_start_scene(false);

text_title = "TITLE";
text_subtitle = "SUBTITLE";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end_scene();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter += 1;

if (counter &gt; step_max) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
step_title_begin = 60;
step_title_end   = 120;
step_subtitle_begin = 180;
step_subtitle_end   = 240;
*/

var black_alpha, title_alpha, subtitle_alpha;

var scale = 1;

draw_set_font(fnt_get(FONT.title));

if (counter &lt; step_end_begin) {

  // Back background:
  draw_set_colour(c_black);
  draw_set_alpha(1);
  draw_rectangle(0, 0, gui_width(), gui_height(), false);
  
  // Text:
  title_alpha    = min(1, (counter - step_title_begin)    / (step_title_end    - step_title_begin));
  subtitle_alpha = min(1, (counter - step_subtitle_begin) / (step_subtitle_end - step_subtitle_begin));

  draw_set_halign(fa_center);
  draw_set_colour(c_white);
  
  draw_set_alpha(title_alpha);
  draw_set_valign(fa_bottom);
  draw_text_transformed(gui_width() / 2, gui_height() / 2, text_title, scale, scale, 0);
  
  draw_set_alpha(subtitle_alpha);
  draw_set_valign(fa_top);
  draw_text_transformed(gui_width() / 2, gui_height() / 2, text_subtitle, scale, scale, 0);
  
  }
else if (counter &gt;= step_end_begin) {

  black_alpha = 1 - (counter - step_end_begin) / (step_max - step_end_begin);
  
  // Back background:
  draw_set_colour(c_black);
  draw_set_alpha(black_alpha);
  draw_rectangle(0, 0, gui_width(), gui_height(), false);

  // Text:
  draw_set_halign(fa_center);
  draw_set_colour(c_white);
  
  draw_set_alpha(black_alpha);
  draw_set_valign(fa_bottom);
  draw_text_transformed(gui_width() / 2, gui_height() / 2, text_title, scale, scale, 0);
  
  draw_set_alpha(black_alpha);
  draw_set_valign(fa_top);
  draw_text_transformed(gui_width() / 2, gui_height() / 2, text_subtitle, scale, scale, 0);
  
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This is empty but needed.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
